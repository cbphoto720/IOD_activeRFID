function outtable = readARFIDcobbleLog(filename, datatype,taglist)
%IMPORTFILE Import data from a text file
%  ARFIDCOBBLELOG1 = readARFIDcobbleLog(FILENAME) reads data from text file
%  FILENAME for the default selection.  Returns the data as a table.
%
%  ARFIDCOBBLELOG1 = readARFIDcobbleLog(FILE, DATALINES) reads data for the
%  specified row interval(s) of text file FILENAME. Specify DATALINES as
%  a positive scalar integer or a N-by-2 array of positive scalar
%  integers for dis-contiguous row intervals.
%
%  Example:
%  aRFIDcobbleLog1 = readARFIDcobbleLog("C:\Users\ccblack\Documents\Carson\Projects\IOD_activeRFID\ActiveCobbleData\aRFIDcobbleLog_20220809.txt", [2, Inf]);
%
%  See also READTABLE.
%
% Auto-generated by MATLAB on 12-Aug-2022 11:44:56

%% Input handling
dataLines = [2, Inf]; %skip header names

% If datatype is not specified, output standardized taglist
if ~exist('datatype','var')
    datatype='standard';
end

% If taglist is not specified, use standard taglist
if ~exist('taglist','var')
    taglist=[477764:477793]'; %ARFID taglist set
end

%current -inputparser

%% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 5);

% Specify range and delimiter
opts.DataLines = dataLines;
opts.Delimiter = "\t";

% Specify column names and types
opts.VariableNames = ["UTCtime", "TagID", "Lat", "Lon", "notes"];
opts.VariableTypes = ["string", "double", "double", "double", "string"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";

% Specify variable properties
opts = setvaropts(opts, "UTCtime", "WhitespaceRule", "preserve");
opts = setvaropts(opts, ["UTCtime", "notes"], "EmptyFieldRule", "auto");

% Import the data
dataread = readtable(filename, opts);

%% Output raw/standardized data
switch datatype
    case 'raw'
        outtable = dataread;
    case 'standard'
        date=extractAfter(filename,strlength(filename)-12);
        date=char(date);
        date(regexp(date,'[.]txt'):end)=[];

        %Preallocate
        outtable=table('Size',[length(taglist),5],'VariableNames',["UTCtime", "TagID", "Lat", "Lon", "notes"],'VariableTypes',["string", "double", "double", "double", "string"]);
        
        for i=1:length(taglist) % iterate taglist to find last log entry (deletion or flag)
            ind=find(dataread.TagID==taglist(i),1,"last");
            if isempty(ind) || dataread.Lat(ind)==999 %find deletions & missing tags
                outtable(i,:)=num2cell(nan(1,5));
                outtable.TagID(i)=taglist(i);
            elseif dataread.Lat(ind)<=90 % find flags
                outtable(i,:)=dataread(ind,:);
            end
        end
        clear i ind
        outtable.UTCtime=fillmissing(outtable.UTCtime,'constant',string(date)); %fill missing dates
        outtable.notes=fillmissing(outtable.notes,'constant',""); %fill missing notes
end


end